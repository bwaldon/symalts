return(plot)
}
prod_graph = function(data) {
levels(data$condition) = c("Before parameter change","Increase prior\nexpectation of\nexhaustive alternative","Increase prior\nexpectation that lexicon\ncontains non-exhaustive 'some'", "Increase prior\nexpectation that lexicon\ncontains exhaustive 'some'")
data$state = factor(data$state)
levels(data$state) = c("6/9 symbols are X", "9/9 symbols are X")
plot <- ggplot(data, aes(x=factor(state), y=probs, fill = condition)) +
geom_bar(stat="identity",position = "dodge") +
theme_bw() +
scale_fill_grey() +
theme(text = element_text(size = base * expand / 1.5, face = "bold"),
legend.position = "right",
legend.spacing.y = 2pt) +
labs(fill = element_blank(), y = "Simulated L1 probability") +
xlab(element_blank()) +
ylim(0,0.9)
return(plot)
}
prod_graph = function(data) {
levels(data$condition) = c("Before parameter change","Increase prior\nexpectation of\nexhaustive alternative","Increase prior\nexpectation that lexicon\ncontains non-exhaustive 'some'", "Increase prior\nexpectation that lexicon\ncontains exhaustive 'some'")
data$state = factor(data$state)
levels(data$state) = c("6/9 symbols are X", "9/9 symbols are X")
plot <- ggplot(data, aes(x=factor(state), y=probs, fill = condition)) +
geom_bar(stat="identity",position = "dodge") +
theme_bw() +
scale_fill_grey() +
theme(text = element_text(size = base * expand / 1.5, face = "bold"),
legend.position = "right",
legend.spacing.y = 2) +
labs(fill = element_blank(), y = "Simulated L1 probability") +
xlab(element_blank()) +
ylim(0,0.9)
return(plot)
}
prod_graph(d)
prod_graph = function(data) {
levels(data$condition) = c("Before parameter change","Increase prior\nexpectation of\nexhaustive alternative","Increase prior\nexpectation that lexicon\ncontains non-exhaustive 'some'", "Increase prior\nexpectation that lexicon\ncontains exhaustive 'some'")
data$state = factor(data$state)
levels(data$state) = c("6/9 symbols are X", "9/9 symbols are X")
plot <- ggplot(data, aes(x=factor(state), y=probs, fill = condition)) +
geom_bar(stat="identity",position = "dodge") +
theme_bw() +
scale_fill_grey() +
theme(text = element_text(size = base * expand / 1.5, face = "bold"),
legend.position = "right",
legend.spacing.y = unit(2,"pt")) +
labs(fill = element_blank(), y = "Simulated L1 probability") +
xlab(element_blank()) +
ylim(0,0.9)
return(plot)
}
prod_graph(d)
prod_graph = function(data) {
levels(data$condition) = c("Before parameter change","Increase prior\nexpectation of\nexhaustive alternative","Increase prior\nexpectation that lexicon\ncontains non-exhaustive 'some'", "Increase prior\nexpectation that lexicon\ncontains exhaustive 'some'")
data$state = factor(data$state)
levels(data$state) = c("6/9 symbols are X", "9/9 symbols are X")
plot <- ggplot(data, aes(x=factor(state), y=probs, fill = condition)) +
geom_bar(stat="identity",position = "dodge") +
theme_bw() +
scale_fill_grey() +
theme(text = element_text(size = base * expand / 1.5, face = "bold"),
legend.position = "right",
legend.spacing.y = unit(8,"pt")) +
labs(fill = element_blank(), y = "Simulated L1 probability") +
xlab(element_blank()) +
ylim(0,0.9)
return(plot)
}
prod_graph(d)
ggsave("plot.pdf",width = 6, height = 4,units = "in",dpi = 1000)
prod_graph = function(data) {
levels(data$condition) = c("Before parameter change","Increase prior\nexpectation of\nexhaustive alternative","Increase prior\nexpectation that lexicon\ncontains non-exhaustive 'some'", "Increase prior\nexpectation that lexicon\ncontains exhaustive 'some'")
data$state = factor(data$state)
levels(data$state) = c("6/9 symbols are X", "9/9 symbols are X")
plot <- ggplot(data, aes(x=factor(state), y=probs, fill = condition)) +
geom_bar(stat="identity",position = "dodge") +
theme_bw() +
scale_fill_grey() +
theme(text = element_text(size = base * expand / 1.5, face = "bold"),
legend.position = "right",
legend.spacing.y = unit(0.1,"cm")) +
labs(fill = element_blank(), y = "Simulated L1 probability") +
xlab(element_blank()) +
ylim(0,0.9)
return(plot)
}
prod_graph(d)
prod_graph = function(data) {
levels(data$condition) = c("Before parameter change","Increase prior\nexpectation of\nexhaustive alternative","Increase prior\nexpectation that lexicon\ncontains non-exhaustive 'some'", "Increase prior\nexpectation that lexicon\ncontains exhaustive 'some'")
data$state = factor(data$state)
levels(data$state) = c("6/9 symbols are X", "9/9 symbols are X")
plot <- ggplot(data, aes(x=factor(state), y=probs, fill = condition)) +
geom_bar(stat="identity",position = "dodge") +
theme_bw() +
scale_fill_grey() +
theme(text = element_text(size = base * expand / 1.5, face = "bold"),
legend.position = "right",
legend.spacing.x = unit(0.1,"cm")) +
labs(fill = element_blank(), y = "Simulated L1 probability") +
xlab(element_blank()) +
ylim(0,0.9)
return(plot)
}
prod_graph(d)
prod_graph = function(data) {
levels(data$condition) = c("Before parameter change","Increase prior\nexpectation of\nexhaustive alternative","Increase prior\nexpectation that lexicon\ncontains non-exhaustive 'some'", "Increase prior\nexpectation that lexicon\ncontains exhaustive 'some'")
data$state = factor(data$state)
levels(data$state) = c("6/9 symbols are X", "9/9 symbols are X")
plot <- ggplot(data, aes(x=factor(state), y=probs, fill = condition)) +
geom_bar(stat="identity",position = "dodge") +
theme_bw() +
scale_fill_grey() +
theme(text = element_text(size = base * expand / 1.5, face = "bold"),
legend.position = "right",
legend.spacing.y = unit(0.1,"cm")) +
labs(fill = element_blank(), y = "Simulated L1 probability") +
xlab(element_blank()) +
ylim(0,0.9)
return(plot)
}
prod_graph(d)
prod_graph = function(data) {
levels(data$condition) = c("Before parameter change","Increase prior\nexpectation of\nexhaustive alternative","Increase prior\nexpectation that lexicon\ncontains non-exhaustive 'some'", "Increase prior\nexpectation that lexicon\ncontains exhaustive 'some'")
data$state = factor(data$state)
levels(data$state) = c("6/9 symbols are X", "9/9 symbols are X")
plot <- ggplot(data, aes(x=factor(state), y=probs, fill = condition)) +
geom_bar(stat="identity",position = "dodge") +
theme_bw() +
scale_fill_grey() +
theme(text = element_text(size = base * expand / 1.5, face = "bold"),
legend.position = "right",
legend.spacing.y = unit(1,"cm")) +
labs(fill = element_blank(), y = "Simulated L1 probability") +
xlab(element_blank()) +
ylim(0,0.9)
return(plot)
}
prod_graph(d)
prod_graph = function(data) {
levels(data$condition) = c("Before parameter change","Increase prior\nexpectation of\nexhaustive alternative","Increase prior\nexpectation that lexicon\ncontains non-exhaustive 'some'", "Increase prior\nexpectation that lexicon\ncontains exhaustive 'some'")
data$state = factor(data$state)
levels(data$state) = c("6/9 symbols are X", "9/9 symbols are X")
plot <- ggplot(data, aes(x=factor(state), y=probs, fill = condition)) +
geom_bar(stat="identity",position = "dodge") +
theme_bw() +
scale_fill_grey() +
theme(text = element_text(size = base * expand / 1.5, face = "bold"),
legend.position = "right") +
labs(fill = element_blank(), y = "Simulated L1 probability") +
xlab(element_blank()) +
ylim(0,0.9) +
guides(fill=guide_legend(
keywidth=0.1,
keyheight=0.1,
default.unit="inch")
)
return(plot)
}
prod_graph(d)
prod_graph = function(data) {
levels(data$condition) = c("Before parameter change","Increase prior\nexpectation of\nexhaustive alternative","Increase prior\nexpectation that lexicon\ncontains non-exhaustive 'some'", "Increase prior\nexpectation that lexicon\ncontains exhaustive 'some'")
data$state = factor(data$state)
levels(data$state) = c("6/9 symbols are X", "9/9 symbols are X")
plot <- ggplot(data, aes(x=factor(state), y=probs, fill = condition)) +
geom_bar(stat="identity",position = "dodge") +
theme_bw() +
scale_fill_grey() +
theme(text = element_text(size = base * expand / 1.5, face = "bold"),
legend.position = "right") +
labs(fill = element_blank(), y = "Simulated L1 probability") +
xlab(element_blank()) +
ylim(0,0.9) +
guides(fill=guide_legend(
keywidth=0.1,
keyheight=0.5,
default.unit="inch")
)
return(plot)
}
prod_graph(d)
prod_graph = function(data) {
levels(data$condition) = c("Before parameter change","Increase prior\nexpectation of\nexhaustive alternative","Increase prior\nexpectation that lexicon\ncontains non-exhaustive 'some'", "Increase prior\nexpectation that lexicon\ncontains exhaustive 'some'")
data$state = factor(data$state)
levels(data$state) = c("6/9 symbols are X", "9/9 symbols are X")
plot <- ggplot(data, aes(x=factor(state), y=probs, fill = condition)) +
geom_bar(stat="identity",position = "dodge") +
theme_bw() +
scale_fill_grey() +
theme(text = element_text(size = base * expand / 1.5, face = "bold"),
legend.position = "right") +
labs(fill = element_blank(), y = "Simulated L1 probability") +
xlab(element_blank()) +
ylim(0,0.9) +
guides(fill=guide_legend(
keywidth=0.1,
keyheight=0.75,
default.unit="inch")
)
return(plot)
}
prod_graph(d)
ggsave("plot.pdf",width = 6, height = 4,units = "in",dpi = 1000)
prod_graph = function(data) {
levels(data$condition) = c("Before parameter change","Increase prior\nexpectation of\nexhaustive alternative","Increase prior\nexpectation that lexicon\ncontains non-exhaustive 'some'", "Increase prior\nexpectation that lexicon\ncontains exhaustive 'some'")
data$state = factor(data$state)
levels(data$state) = c("6/9 symbols are X", "9/9 symbols are X")
plot <- ggplot(data, aes(x=factor(state), y=probs, fill = condition)) +
geom_bar(stat="identity",position = "dodge") +
theme_bw() +
scale_fill_grey() +
theme(text = element_text(size = base * expand / 1.5, face = "bold"),
legend.position = "right",
axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(fill = element_blank(), y = "Simulated L1 probability") +
xlab(element_blank()) +
ylim(0,0.9) +
guides(fill=guide_legend(
keywidth=0.1,
keyheight=0.75,
default.unit="inch")
)
return(plot)
}
prod_graph(d)
prod_graph = function(data) {
levels(data$condition) = c("Before parameter change","Increase prior\nexpectation of\nexhaustive alternative","Increase prior\nexpectation that lexicon\ncontains non-exhaustive 'some'", "Increase prior\nexpectation that lexicon\ncontains exhaustive 'some'")
data$state = factor(data$state)
levels(data$state) = c("6/9 symbols are X", "9/9 symbols are X")
plot <- ggplot(data, aes(x=factor(state), y=probs, fill = condition)) +
geom_bar(stat="identity",position = "dodge") +
theme_bw() +
scale_fill_grey() +
theme(text = element_text(size = base * expand / 1.5, face = "bold"),
legend.position = "right",
axis.text.x = element_text(angle = 20, hjust = 1)) +
labs(fill = element_blank(), y = "Simulated L1 probability") +
xlab(element_blank()) +
ylim(0,0.9) +
guides(fill=guide_legend(
keywidth=0.1,
keyheight=0.75,
default.unit="inch")
)
return(plot)
}
prod_graph(d)
prod_graph = function(data) {
levels(data$condition) = c("Before parameter change","Increase prior\nexpectation of\nexhaustive alternative","Increase prior\nexpectation that lexicon\ncontains non-exhaustive 'some'", "Increase prior\nexpectation that lexicon\ncontains exhaustive 'some'")
data$state = factor(data$state)
levels(data$state) = c("6/9 symbols are X", "9/9 symbols are X")
plot <- ggplot(data, aes(x=factor(state), y=probs, fill = condition)) +
geom_bar(stat="identity",position = "dodge") +
theme_bw() +
scale_fill_grey() +
theme(text = element_text(size = base * expand / 1.5, face = "bold"),
legend.position = "right",
axis.text.x = element_text(angle = 10, hjust = 1)) +
labs(fill = element_blank(), y = "Simulated L1 probability") +
xlab(element_blank()) +
ylim(0,0.9) +
guides(fill=guide_legend(
keywidth=0.1,
keyheight=0.75,
default.unit="inch")
)
return(plot)
}
prod_graph(d)
ggsave("plot.pdf",width = 6, height = 4,units = "in",dpi = 1000)
View(fixed_effects_alt)
View(fixed_effects_exhclausal)
View(fixed_effects_exhonly)
View(fixed_effects_exhclausal)
View(fixed_effects_exhsubclausal)
View(fixed_effects_btwn_some)
View(fixed_effects_btwn_number)
View(fixed_effects_btwn_adhoc)
bayesmodel = function() {
subset <- d
m <- brm(
responseChoice ~ btwncondition  + (1 + btwncondition|item) + (1|participant),
# control = list(adapt_delta = 0.99, max_treedepth = 15),
data = d %>% filter(primeType == "Ad-hoc"),
family = "bernoulli",
seed = 123,
iter = 4000,
inits = 0
)
return(m)
}
model_out_btwn_full_adhoc <- bayesmodel()
bayesmodel = function() {
subset <- d
m <- brm(
responseChoice ~ btwncondition  + (1 + btwncondition|item) + (1|participant),
# control = list(adapt_delta = 0.99, max_treedepth = 15),
data = d %>% filter(primeType == "Ad-hoc"),
family = "bernoulli",
seed = 123,
iter = 4000,
inits = 0
)
return(m)
}
model_out_btwn_full_adhoc <- bayesmodel()
d <- d_noex %>%
filter(trial_type == "response") %>%
filter((correctPChoices == TRUE & primeStrength != 3) | primeStrength == 3)
d$primeType = factor(d$primeType)
levels(d$primeType) = c("Some", "Number", "Ad-hoc")
d$btwncondition = factor(d$btwncondition)
d$btwncondition = factor(d$btwncondition,levels(d$btwncondition)[c(1,3,4,2)])
d$btwncondition = relevel(d$btwncondition, ref = "alternative")
d$primeStrength = relevel(factor(d$primeStrength), ref = "3")
d <- d %>%
mutate(itemvec = str_replace(responseSymbols, "\\]", "")) %>%
mutate(itemvec = str_replace(itemvec, "\\[", "")) %>%
mutate(itemvec = strsplit(itemvec, split=","))
d$item <- as.numeric(lapply(d$itemvec, FUN = function(x) x[[1]][[1]]))
d$participant <- cumsum(c(0,as.numeric(diff(d$workerid))!=0))
bayesmodel = function() {
subset <- d
m <- brm(
responseChoice ~ btwncondition  + (1 + btwncondition|item) + (1|participant),
# control = list(adapt_delta = 0.99, max_treedepth = 15),
data = d %>% filter(primeType == "Ad-hoc"),
family = "bernoulli",
seed = 123,
iter = 4000,
inits = 0
)
return(m)
}
model_out_btwn_full_adhoc <- bayesmodel()
prod_graph = function(data) {
levels(data$condition) = c("Before parameter change","Increase prior\nexpectation of\nexhaustive alternative","Increase prior\nexpectation that lexicon\ncontains non-exhaustive 'some'", "Increase prior\nexpectation that lexicon\ncontains exhaustive 'some'")
data$state = factor(data$state)
levels(data$state) = c("6/9 symbols are X", "9/9 symbols are X")
plot <- ggplot(data, aes(x=factor(state), y=probs, fill = condition)) +
geom_bar(stat="identity",position = "dodge") +
theme_bw() +
scale_fill_grey() +
theme(text = element_text(size = base * expand / 1, face = "bold"),
legend.position = "right",
axis.text.x = element_text(angle = 10, hjust = 1)) +
labs(fill = element_blank(), y = "Simulated L1 probability") +
xlab(element_blank()) +
ylim(0,0.9) +
guides(fill=guide_legend(
keywidth=0.1,
keyheight=0.75,
default.unit="inch")
)
return(plot)
}
prod_graph(d)
ggsave("plot.pdf",width = 6, height = 4,units = "in",dpi = 1000)
prod_graph = function(data) {
levels(data$condition) = c("Before parameter change","Increase prior\nexpectation of\nexhaustive alternative","Increase prior\nexpectation that lexicon\ncontains non-exhaustive 'some'", "Increase prior\nexpectation that lexicon\ncontains exhaustive 'some'")
data$state = factor(data$state)
levels(data$state) = c("6/9 symbols are X", "9/9 symbols are X")
plot <- ggplot(data, aes(x=factor(state), y=probs, fill = condition)) +
geom_bar(stat="identity",position = "dodge") +
theme_bw() +
scale_fill_grey() +
theme(text = element_text(size = base * expand / 1, face = "bold"),
legend.position = "right",
axis.text.x = element_text(angle = 10, hjust = 1)) +
labs(fill = element_blank(), y = "Simulated L1 probability") +
xlab(element_blank()) +
ylim(0,0.9) +
guides(fill=guide_legend(
keywidth=0.1,
keyheight=0.75,
default.unit="inch")
)
return(plot)
}
prod_graph(d)
ggsave("plot.pdf",width = 6, height = 4,units = "in",dpi = 1000)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
alt <- data.frame(fromJSON("results_alt.json"))
exh <- data.frame(fromJSON("results_exh.json"))
strong <- data.frame(fromJSON("results_strong.json"))
weak <- data.frame(fromJSON("results_weak.json"))
exh$condition = "exh"
strong$condition = "strong"
weak$condition = "weak"
alt$condition = "alt"
d <- rbind(strong,weak,alt,exh)
d$condition <- factor(d$condition,levels(factor(d$condition))[c(1,2,4,3)])
prod_graph = function(data) {
levels(data$condition) = c("Before parameter change","Increase prior\nexpectation of\nexhaustive alternative","Increase prior\nexpectation that lexicon\ncontains non-exhaustive 'some'", "Increase prior\nexpectation that lexicon\ncontains exhaustive 'some'")
data$state = factor(data$state)
levels(data$state) = c("6/9 symbols are X", "9/9 symbols are X")
plot <- ggplot(data, aes(x=factor(state), y=probs, fill = condition)) +
geom_bar(stat="identity",position = "dodge") +
theme_bw() +
scale_fill_grey() +
theme(text = element_text(size = base * expand / 1, face = "bold"),
legend.position = "right",
axis.text.x = element_text(angle = 10, hjust = 1)) +
labs(fill = element_blank(), y = "Simulated L1 probability") +
xlab(element_blank()) +
ylim(0,0.9) +
guides(fill=guide_legend(
keywidth=0.1,
keyheight=0.75,
default.unit="inch")
)
return(plot)
}
prod_graph(d)
ggsave("plot.pdf",width = 6, height = 4,units = "in",dpi = 1000)
prod_graph = function(data) {
levels(data$condition) = c("Before parameter change","Increase prior\nexpectation of\nexhaustive alternative","Increase prior\nexpectation that lexicon\ncontains non-exhaustive 'some'", "Increase prior\nexpectation that lexicon\ncontains exhaustive 'some'")
data$state = factor(data$state)
levels(data$state) = c("6/9 symbols are X", "9/9 symbols are X")
plot <- ggplot(data, aes(x=factor(state), y=probs, fill = condition)) +
geom_bar(stat="identity",position = "dodge") +
theme_bw() +
scale_fill_grey() +
theme(text = element_text(size = base * expand / 1.1, face = "bold"),
legend.position = "right",
axis.text.x = element_text(angle = 20, hjust = 1)) +
labs(fill = element_blank(), y = "Simulated L1 probability") +
xlab(element_blank()) +
ylim(0,0.9) +
guides(fill=guide_legend(
keywidth=0.1,
keyheight=0.75,
default.unit="inch")
)
return(plot)
}
prod_graph(d)
ggsave("plot.pdf",width = 6, height = 4,units = "in",dpi = 1000)
prod_graph = function(data) {
levels(data$condition) = c("Before parameter change","Increase prior\nexpectation of\nexhaustive alternative","Increase prior\nexpectation that lexicon\ncontains non-exhaustive 'some'", "Increase prior\nexpectation that lexicon\ncontains exhaustive 'some'")
data$state = factor(data$state)
levels(data$state) = c("6/9 symbols are X", "9/9 symbols are X")
plot <- ggplot(data, aes(x=factor(state), y=probs, fill = condition)) +
geom_bar(stat="identity",position = "dodge") +
theme_bw() +
scale_fill_grey() +
theme(text = element_text(size = base * expand / 1.1, face = "bold"),
legend.position = "right",
axis.text.x = element_text(angle = 25, hjust = 1)) +
labs(fill = element_blank(), y = "Simulated L1 probability") +
xlab(element_blank()) +
ylim(0,0.9) +
guides(fill=guide_legend(
keywidth=0.1,
keyheight=0.75,
default.unit="inch")
)
return(plot)
}
prod_graph(d)
ggsave("plot.pdf",width = 6, height = 4,units = "in",dpi = 1000)
prod_graph = function(data) {
levels(data$condition) = c("Before parameter change","Increase prior\nexpectation of\nexhaustive alternative","Increase prior\nexpectation that lexicon\ncontains non-exhaustive 'some'", "Increase prior\nexpectation that lexicon\ncontains exhaustive 'some'")
data$state = factor(data$state)
levels(data$state) = c("6/9 symbols are X", "9/9 symbols are X")
plot <- ggplot(data, aes(x=factor(state), y=probs, fill = condition)) +
geom_bar(stat="identity",position = "dodge") +
theme_bw() +
scale_fill_grey() +
theme(text = element_text(size = base * expand / 1.1, face = "bold"),
legend.position = "right",
axis.text.x = element_text(angle = 25, hjust = 1)) +
labs(fill = element_blank(), y = "Simulated L1 probability") +
xlab(element_blank()) +
ylim(0,0.9) +
guides(fill=guide_legend(
keywidth=0.1,
keyheight=0.75,
default.unit="inch")
)
return(plot)
}
prod_graph(d)
ggsave("plot.pdf",width = 6, height = 4,units = "in",dpi = 1000)
prod_graph = function(data) {
levels(data$condition) = c("Before parameter change","Increase prior\nexpectation of\nexhaustive alternative","Increase prior\nexpectation that lexicon\ncontains non-exhaustive 'some'", "Increase prior\nexpectation that lexicon\ncontains exhaustive 'some'")
data$state = factor(data$state)
levels(data$state) = c("6/9 symbols\nare X", "9/9 symbols\nare X")
plot <- ggplot(data, aes(x=factor(state), y=probs, fill = condition)) +
geom_bar(stat="identity",position = "dodge") +
theme_bw() +
scale_fill_grey() +
theme(text = element_text(size = base * expand / 1.1, face = "bold"),
legend.position = "right") +
#axis.text.x = element_text(angle = 25, hjust = 1)) +
labs(fill = element_blank(), y = "Simulated L1 probability") +
xlab(element_blank()) +
ylim(0,0.9) +
guides(fill=guide_legend(
keywidth=0.1,
keyheight=0.75,
default.unit="inch")
)
return(plot)
}
prod_graph(d)
ggsave("plot.pdf",width = 6, height = 4,units = "in",dpi = 1000)
ggsave("plot.pdf",width = 6.5, height = 4,units = "in",dpi = 1000)
ggsave("plot.pdf",width = 7, height = 4,units = "in",dpi = 1000)
View(model_out_btwn_full_some)
View(fixed_effects_btwn_some)
View(fixed_effects_btwn_adhoc)
save.image("~/Documents/GitHub/picturematching/results/statsmodels.RData")
